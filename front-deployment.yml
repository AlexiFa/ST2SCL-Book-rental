apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: front-service
    version: v1
  name: front-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-service
  template:
    metadata:
      labels:
        app: front-service
    spec:
      containers:
        - name: front-service
          image: alex6f/books-front:1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8082
          env:
            - name: REACT_APP_BOOKS_SERVICE_URL
              value: "http://book-catalog-service:80" 
            - name: REACT_APP_USER_SERVICE_URL
              value: "http://user-service-service:80"
          resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: front-service
  name: front-service-service
spec:
  ports:
    - port: 80  # Exposes service inside the cluster
      protocol: TCP
      targetPort: 80
      name: http
  selector:
    app: front-service
  type: ClusterIP  # Matches book-catalog-service
status:
  loadBalancer: {}

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: front-service-proxy
spec:
  hosts:
    - "*"
  gateways:
    - project/microservice-gateway
  http:
    - match:
        - uri:
            prefix: /
      rewrite:
        uri: /
      route:
        - destination:
            port:
              number: 80
            host: front-service-service.project.svc.cluster.local
